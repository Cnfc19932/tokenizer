import { tokenizer } from './tokenizer';
const tokenizerTag = ([str]: TemplateStringsArray) => tokenizer(str);

const domain = ([value]: TemplateStringsArray) => ({ type: 'domain', value });
const text = ([value]: TemplateStringsArray) => ({ type: 'text', value });
const users = ([value]: TemplateStringsArray) => ({ type: 'users', value });
const tickers = ([value]: TemplateStringsArray) => ({ type: 'tickers', value });
const hash = ([value]: TemplateStringsArray) => ({ type: 'hash', value });
const email = ([value]: TemplateStringsArray) => ({ type: 'email', value });

describe('url parsing', () => {
  it('https://example.com', () => {
    expect(tokenizerTag`check out https://example.com`[1]).toEqual(domain`https://example.com`);
  });

  it('example.com', () => {
    expect(tokenizerTag`go to example.com`[1]).toEqual(domain`example.com`);
  });

  it('—Ç–∏–Ω—å–∫–æ—Ñ—Ñ.—Ä—Ñ', () => {
    expect(tokenizerTag`–ø–∞—Ç—Ä–∏–æ—Ç–∏—á–Ω—ã–π —Ç–∏–Ω—å–∫–æ—Ñ—Ñ.—Ä—Ñ`[1]).toEqual(domain`—Ç–∏–Ω—å–∫–æ—Ñ—Ñ.—Ä—Ñ`);
  });

  it('with hash tags', () => {
    expect(tokenizerTag`spa routing example.com#/some.cool?hash. Sure`[1]).toEqual(
      domain`example.com#/some.cool?hash`
    );
  });

  it('starts with -', () => {
    expect(tokenizerTag`-www.dohod.ru/ik/analytics/dividend/`[1]).toEqual(
        domain`www.dohod.ru/ik/analytics/dividend/`
    );
  });

  it('starts with emoji', () => {
    expect(tokenizerTag`üìçwww.dohod.ru/ik/analytics/dividend/`[1]).toEqual(
        domain`www.dohod.ru/ik/analytics/dividend/`
    );
  });

  it('uses "-" a lot', () => {
    expect(tokenizerTag`www-stage.some-cool--domain.ru/?param-with-dash=value`[0]).toEqual(
        domain`www-stage.some-cool--domain.ru/?param-with-dash=value`
    );
  });

  it('has mail in hash', () => {
    expect(tokenizerTag`exapmle.com/?user=my@mail.ru`[0]).toEqual(
        domain`exapmle.com/?user=my@mail.ru`
    );
  });
});
describe('email', () => {
  it('simple email', function () {
    expect(tokenizerTag`email me at my@mail.ru! Hit me a msg`[1]).toEqual(
        email`my@mail.ru`
    );
  });
  it('email with dots and dashes', function () {
    expect(tokenizerTag`i've created my.new-email-for.work@mail.co.uk. Send some work stuff there`[1]).toEqual(
        email`my.new-email-for.work@mail.co.uk`
    );
  });
  it('cyrillic mail', function () {
    expect(tokenizerTag`i've created –º–æ—è.–ø–æ—á—Ç–∞@—è–Ω–¥–µ–∫—Å.—Ä—Ñ. Send some work stuff there`[1]).toEqual(
        email`–º–æ—è.–ø–æ—á—Ç–∞@—è–Ω–¥–µ–∫—Å.—Ä—Ñ`
    );
  });
})

describe('integration', () => {
  it('should parse big text', function () {
    const result = tokenizerTag`
    ‚ùó–°—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ (–∫–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö, —Ç–∞–∫ –∏ –ø–ª–∞—Ç–Ω—ã—Ö). –ù–∏–∂–µ –ø—Ä–∏–≤–æ–∂—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö, –∫–æ—Ç–æ—Ä—ã–º–∏ –ø–æ–ª—å–∑—É—é—Å—å —Å–∞–º.

üìç¬†https://ru.tradingview.com¬†¬†- —Å–∞–º—ã–π —É–¥–æ–±–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞, –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏.
üìçhttps://ru.investing.com-–∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç–º–∏—Ç–µ–Ω—Ç–∞–º, —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å–≤–æ–¥–∫–∞.
üìç https://bigcapital.org- –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ä–µ—Å—É—Ä—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª–∞ –∫–æ–º–ø–∞–Ω–∏–π –†–§, –≤—Å—è –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç–º–∏—Ç–µ–Ω—Ç–∞–º, –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ç–æ—Ä—ã, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏, –¥–∏–Ω–∞–º–∏–∫–∞ –¥–æ–ª–≥–æ–≤ –∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–∞–ø–∏—Ç–∞–ª–∞. –ü–æ –∞–∫—Ü–∏—è–º –≤—Ç–æ—Ä–æ–≥–æ-—Ç—Ä–µ—Ç—å–µ–≥–æ —ç—à–µ–ª–æ–Ω–∞ ({$TTLK} , {$TRMK} , {$CNTL} ) –Ω–µ –≤—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.
üìç¬†https://simplywall.st  - –Ω–∞–≥–ª—è–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫–æ–º–ø–∞–Ω–∏–π. –£–¥–æ–±–Ω–∞—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –±—ã—Å—Ç—Ä–æ –æ—Ü–µ–Ω–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —ç–º–∏—Ç–µ–Ω—Ç–∞. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –í –æ—Å–Ω–æ–≤–Ω–æ–º, —è –ø–æ–ª—å–∑—É—é—Å—å —ç—Ç–∏–º —Ä–µ—Å—É—Ä—Å–æ–º. –¢–∞–∫–∂–µ —Å–µ—Ä–≤–∏—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Å—Ç–∏ —É—á–µ—Ç –ª–∏—á–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è. –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–ª–∞—Ç–Ω–∞—è(10$ –≤ –º–µ—Å—è—Ü), –Ω–æ –º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º —Ç—Ä–∏–∞–ª–æ–º.
üìç¬†https://finviz.com¬†- —Å–∫—Ä–∏–Ω–µ—Ä –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π, –ø–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç 10 –º–ª—Ä–¥ USD : ¬†{$ABBV} , {$KEY} , {$VRTX} –∏–ª–∏ —Å –¥–∏–≤. –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –±–æ–ª–µ–µ 7% –≤ USD: {$ET} , {$MO} , {$MBT} –∏ —Ç.–¥.
üìçwww.dohod.ru/ik/analytics/dividend/¬†- –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –¥–∏–≤–∏–¥–µ–Ω–¥–∞–º —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —ç–º–∏—Ç–µ–Ω—Ç–æ–≤, –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ –¥–∏–≤–∞–º, —Ç–∞–∫–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–µ–∫—Å DSI (–∏–Ω–¥–µ–∫—Å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã—Ö –≤—ã–ø–ª–∞—Ç). –ß–µ–º –±–ª–∏–∂–µ DSI –∫ 1, —Ç–µ–º –ª—É—á—à–µ - —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –¥–∏–≤—ã –≤—ã–ø–ª–∞—á–∏–≤–∞–ª–∏—Å—å –∏ –ø–æ–≤—ã—à–∞–ª–∏—Å—å 7 –ª–µ—Ç –ø–æ–¥—Ä—è–¥, –∞ –∑–Ω–∞—á–∏—Ç –≤—ã—Å–æ–∫–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ –∏—Ö –Ω–µ –ø–æ—Ä–µ–∂—É—Ç.¬† –ï—Å–ª–∏ 0,3 <¬†DSI <0,6 - –∫–æ–º–ø–∞–Ω–∏—è –≤—ã–ø–ª–∞—á–∏–≤–∞–µ—Ç –¥–∏–≤—ã –Ω–µ—Ä–µ–≥—É–ª—è—Ä–Ω–æ. –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, —É {$TATNP} —ç—Ç–æ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å 0.86, {$SNGSP} - 0.71 , {$BSPB} - 0.57.
üìçhttps://conomy.ru¬†- —É–¥–æ–±–Ω—ã–π —Å–∞–π—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π (–†–°–ë–£ –∏ –ú–§–°–û), –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—è –ø–æ–∫–≤–∞—Ä—Ç–∞–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å –∏ –Ω–∞–∫–∞–ø–ª–∏–≤–∞—é—â–∏–π—Å—è –∏—Ç–æ–≥, —É—á–∏—Ç—ã–≤–∞—è –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—É—é –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–º–ø–∞–Ω–∏–∏, –º—ã –º–æ–∂–µ–º –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –±—É–¥—É—â—É—é –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –ø–æ –∏—Ç–æ–≥–∞–º –≥–æ–¥–∞.
üìçhttps://smart-lab.ru/¬†- –∫—Ä—É–ø–Ω–µ–π—à–∏–π —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã–π —Ä–µ—Å—É—Ä—Å –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ñ–æ–Ω–¥–æ–≤—ã–º —Ä—ã–Ω–∫–æ–º –†–§, –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π.

–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ... ‚¨áÔ∏è
    `
    const domains = result.filter(x => x.type === 'domain').map(x => x.value);
    expect(domains).toEqual([
        'https://ru.tradingview.com',
        'https://ru.investing.com',
        'https://bigcapital.org',
        'https://simplywall.st',
        'https://finviz.com',
        'www.dohod.ru/ik/analytics/dividend/',
        'https://conomy.ru',
        'https://smart-lab.ru/'
    ])
    result;
  });

  it('complex test', () => {
    const str = 'sdf dsf #one dfsd https://vk.com —è–Ω–¥–µ–∫—Å.—Ä—Ñ. @user sdf #one $ticker dsf';
    const result = tokenizer(str, {
      tickers: '\\$ticker',
      users: '@user',
      hash: '#one',
    });

    expect(result).toEqual([
      text`sdf dsf `,
      hash`#one`,
      text` dfsd `,
      domain`https://vk.com`,
      text` `,
      domain`—è–Ω–¥–µ–∫—Å.—Ä—Ñ`,
      text`. `,
      users`@user`,
      text` sdf `,
      hash`#one`,
      text` `,
      tickers`$ticker`,
      text` dsf`,
    ]);
  });

  it('should omit empty tokens regexp', function () {
    const str = 'sdf dsf #one dfsd https://vk.com —è–Ω–¥–µ–∫—Å.—Ä—Ñ. @user sdf #one $ticker dsf';
    const result = tokenizer(str, {
      tickers: '',
      users: '',
      hash: '',
    });

    expect(result).toEqual([
      text`sdf dsf #one dfsd `,
      domain`https://vk.com`,
      text` `,
      domain`—è–Ω–¥–µ–∫—Å.—Ä—Ñ`,
      text`. @user sdf #one $ticker dsf`,
    ]);
  });
});
